#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.4 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 112 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 62 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 190 190 190 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 107 142 35 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 100 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 100 149 237 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 65 105 225 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 70 130 180 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 47 79 79 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 139 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 75 0 130 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 160 32 240 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 250 128 114 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 184 134 11 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 128 128 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 169 169 169 0 0 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 228 225 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 0 0 224 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 224 255 255 -1 -1 61
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 1 1 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 0 0 255 228 225 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 255 224 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 255 255 228 225 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 107 142 35 224 255 255 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 0 0 0 0 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 100 0 224 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 139 0 0 224 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 255 228 225 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 65 105 225 255 228 225 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 100 0 255 228 225 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 65 105 225 224 255 255 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 139 0 0 255 228 225 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 70 130 180 224 255 255 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 70 130 180 255 228 225 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 47 79 79 224 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 139 224 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 139 255 228 225 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 75 0 130 224 255 255 -1 -1
4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 160 32 240 224 255 255 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 224 255 255 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 250 128 114 224 255 255 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 184 134 11 224 255 255 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 128 128 0 224 255 255 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 250 128 114 255 228 225 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 184 134 11 255 228 225 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 128 128 0 255 228 225 -1
-1           0 2546 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; Chapter 5 of The Little Schemer:"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; *Oh My God*: It's Full of Stars"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #"; We need to define atom? for Scheme as it's not a primitive        "
 #"   ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";                                                                   "
 #"   ;"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"atom?"
0 0 24 3 58
#"                                                          "
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 59
#")                                                          "
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #"))("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 33 #")))))                            "
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; The add1 primitive"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"add1"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #"; The rember* function removes all matching atoms from an S-expressi"
 #"on"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"rember*"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"atom?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         (("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"rember*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 7 #"rember*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 7 #"rember*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #"))("
0 0 14 3 7 #"rember*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; Examples of rember*"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"rember*"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"cup"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 6 #"coffee"
0 0 24 3 2 #") "
0 0 14 3 3 #"cup"
0 0 24 3 3 #" (("
0 0 14 3 3 #"tea"
0 0 24 3 2 #") "
0 0 14 3 3 #"cup"
0 0 24 3 3 #") ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 4 #"hick"
0 0 24 3 3 #")) "
0 0 14 3 3 #"cup"
0 0 24 3 6 #"))    "
0 0 17 3 34 #"; '((coffee) ((tea)) (and (hick)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"rember*"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"sauce"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 6 #"tomato"
0 0 24 3 1 #" "
0 0 14 3 5 #"sauce"
0 0 24 3 4 #"))(("
0 0 14 3 4 #"bean"
0 0 24 3 1 #")"
0 0 14 3 5 #"sauce"
0 0 24 3 2 #")("
0 0 14 3 3 #"and"
0 0 24 3 3 #" (("
0 0 14 3 6 #"flying"
0 0 24 3 2 #") "
0 0 14 3 5 #"sauce"
0 0 24 3 8 #"))))    "
0 0 17 3 41 #"; '(((tomato)) ((bean)) (and ((flying))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 6 #"; The "
0 0 17 3 8 #"insertR*"
0 0 17 3 1 #" "
0 0 17 3 8 #"function"
0 0 17 3 1 #" "
0 0 17 3 7 #"inserts"
0 0 17 3 1 #" "
0 0 17 3 3 #"new"
0 0 17 3 1 #" "
0 0 17 3 2 #"to"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 5 #"right"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"all"
0 0 17 3 1 #" "
0 0 17 3 4 #"olds"
0 0 17 3 5 #" in l"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"insertR*"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 3 #"old"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"atom?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         (("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 14 3 3 #"old"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 3 #"old"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 1 #"("
0 0 14 3 8 #"insertR*"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 3 #"old"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #")("
0 0 14 3 8 #"insertR*"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 3 #"old"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #"("
0 0 14 3 8 #"insertR*"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 3 #"old"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #"))("
0 0 14 3 8 #"insertR*"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 3 #"old"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; Example of insertR*"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"insertR*"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"roast"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"chuck"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 3 #"how"
0 0 24 3 1 #" "
0 0 14 3 4 #"much"
0 0 24 3 2 #" ("
0 0 14 3 4 #"wood"
0 0 24 3 3 #")) "
0 0 14 3 5 #"could"
0 0 24 3 3 #" (("
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 4 #"wood"
0 0 24 3 2 #") "
0 0 14 3 5 #"chuck"
0 0 24 3 5 #"))((("
0 0 14 3 5 #"chuck"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"a"
0 0 24 3 3 #")(("
0 0 14 3 4 #"wood"
0 0 24 3 1 #" "
0 0 14 3 5 #"chuck"
0 0 24 3 4 #"))) "
0 0 14 3 5 #"could"
0 0 24 3 1 #" "
0 0 14 3 5 #"chuck"
0 0 24 3 1 #" "
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 5 #"; ==>"
0 0 24 29 1 #"\n"
0 9         313 21           0 0           0 51 0 24 3 2 #"(("
0 0 14 3 3 #"how"
0 0 24 3 1 #" "
0 0 14 3 4 #"much"
0 0 24 3 2 #" ("
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 5 #"could"
0 0 24 29 1 #"\n"
0 0 24 3 3 #" (("
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 4 #"wood"
0 0 24 3 2 #") "
0 0 14 3 5 #"chuck"
0 0 24 3 1 #" "
0 0 14 3 5 #"roast"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #" ((("
0 0 14 3 5 #"chuck"
0 0 24 3 1 #" "
0 0 14 3 5 #"roast"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"a"
0 0 24 3 4 #") (("
0 0 14 3 4 #"wood"
0 0 24 3 1 #" "
0 0 14 3 5 #"chuck"
0 0 24 3 1 #" "
0 0 14 3 5 #"roast"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 5 #"could"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 5 #"chuck"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 5 #"roast"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 4 #"wood"
0 0 24 3 1 #")"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";                                                                   "
 #"                          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #"; The first commandment (final version)                             "
 #"                          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";                                                                   "
 #"                          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #"; When recurring on a list of atoms, lat, ask two questions about it"
 #":                         ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #"; (null? lat) and else.                                             "
 #"                          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #"; When recurring on a number, n, ask two questions about it: (zero? "
 #"n) and else.              ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #"; When recurring on a list of S-expressions, l, ask three questions "
 #"about it: (null? l),      ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #"; (atom? (car l)), and else.                                        "
 #"                          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";                                                                   "
 #"                          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";                                                                   "
 #"                          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #"; The fourth commandment (final version)                            "
 #"                          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";                                                                   "
 #"                          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #"; Always change at least one argument while recurring. When recurrin"
 #"g on a list of atoms,     ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #"; lat, use (cdr l). When recurring on anumber, n, use (sub1 n).     "
 #"                          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #"; And when recurring on a list if S-expressions, l, use (car l) and "
 #"(cdr l) if neither        ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #"; (null? l) nor (atom?(car l)) are true.                            "
 #"                          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";                                                                   "
 #"                          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #"; It must be changed to be closer to termination. The changing argum"
 #"ent must be tested in the ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #"; termination condition:                                            "
 #"                          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #"; * when using cdr, test the termination with null? and             "
 #"                          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #"; * when using sub1, test termination with zero?                    "
 #"                          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";                                                                   "
 #"                          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 68
#"; The occur* cuntion counts the number of occurances of an atom in l"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"occur*"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"atom?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         (("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #"("
0 0 14 3 6 #"occur*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"occur*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"occur*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"occur*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; Example of occur*"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"occur*"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"banana"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 6 #"banana"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 5 #"split"
0 0 24 3 4 #"(((("
0 0 14 3 6 #"banana"
0 0 24 3 1 #" "
0 0 14 3 3 #"ice"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 5 #"cream"
0 0 24 3 1 #"("
0 0 14 3 6 #"banana"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 7 #"sherbet"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"banana"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 5 #"bread"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"banana"
0 0 24 3 1 #" "
0 0 14 3 6 #"brandy"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 7 #"; ==> 5"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 56 #"; The subst* function substitutes all olds for news in l"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"subst*"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 3 #"old"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"atom?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         (("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 14 3 3 #"old"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 1 #"("
0 0 14 3 6 #"subst*"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 3 #"old"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 6 #"subst*"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 3 #"old"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 6 #"subst*"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 3 #"old"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"subst*"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 3 #"old"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; Example of subst*"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"subst*"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"orange"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"banana"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 6 #"banana"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 5 #"split"
0 0 24 3 5 #" (((("
0 0 14 3 6 #"banana"
0 0 24 3 1 #" "
0 0 14 3 3 #"ice"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 5 #"cream"
0 0 24 3 2 #" ("
0 0 14 3 6 #"banana"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 7 #"sherbet"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"banana"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 5 #"bread"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"banana"
0 0 24 3 1 #" "
0 0 14 3 6 #"brandy"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 5 #"; ==>"
0 0 24 29 1 #"\n"
0 9         199 21           0 0           0 32 0 24 3 2 #"(("
0 0 14 3 6 #"orange"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 5 #"split"
0 0 24 3 5 #" (((("
0 0 14 3 6 #"orange"
0 0 24 3 1 #" "
0 0 14 3 3 #"ice"
0 0 24 3 5 #"))) ("
0 0 14 3 5 #"cream"
0 0 24 3 2 #" ("
0 0 14 3 6 #"orange"
0 0 24 3 3 #")) "
0 0 14 3 7 #"sherbet"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 6 #"orange"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 5 #"bread"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 6 #"orange"
0 0 24 3 1 #" "
0 0 14 3 6 #"brandy"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 64
#"; The insertL* function inserts new to the left of all olds in l"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"insertL*"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 3 #"old"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"atom?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         (("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 3 #"old"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 3 #"old"
0 0 24 3 2 #" ("
0 0 14 3 8 #"insertL*"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 3 #"old"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 8 #"insertL*"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 3 #"old"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 8 #"insertL*"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 3 #"old"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #")) ("
0 0 14 3 8 #"insertL*"
0 0 24 3 1 #" "
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 3 #"old"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; Example of insertL*"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"insertL*"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"pecker"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"chuck"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 3 #"how"
0 0 24 3 1 #" "
0 0 14 3 4 #"much"
0 0 24 3 2 #" ("
0 0 14 3 4 #"wood"
0 0 24 3 3 #")) "
0 0 14 3 5 #"could"
0 0 24 3 3 #" (("
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 4 #"wood"
0 0 24 3 2 #") "
0 0 14 3 5 #"chuck"
0 0 24 3 6 #")) ((("
0 0 14 3 5 #"chuck"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"a"
0 0 24 3 4 #") (("
0 0 14 3 4 #"wood"
0 0 24 3 1 #" "
0 0 14 3 5 #"chuck"
0 0 24 3 4 #"))) "
0 0 14 3 5 #"could"
0 0 24 3 1 #" "
0 0 14 3 5 #"chuck"
0 0 24 3 1 #" "
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 5 #"; ==>"
0 0 24 29 1 #"\n"
0 9         313 21           0 0           0 51 0 24 3 2 #"(("
0 0 14 3 3 #"how"
0 0 24 3 1 #" "
0 0 14 3 4 #"much"
0 0 24 3 2 #" ("
0 0 14 3 4 #"wood"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 5 #"could"
0 0 24 29 1 #"\n"
0 0 24 3 3 #" (("
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 4 #"wood"
0 0 24 3 2 #") "
0 0 14 3 6 #"pecker"
0 0 24 3 1 #" "
0 0 14 3 5 #"chuck"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #" ((("
0 0 14 3 6 #"pecker"
0 0 24 3 1 #" "
0 0 14 3 5 #"chuck"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"a"
0 0 24 3 4 #") (("
0 0 14 3 4 #"wood"
0 0 24 3 1 #" "
0 0 14 3 6 #"pecker"
0 0 24 3 1 #" "
0 0 14 3 5 #"chuck"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 5 #"could"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 6 #"pecker"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 5 #"chuck"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 14 3 4 #"wood"
0 0 24 3 1 #")"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #"; The member* function  determines if element is a list l of S-expre"
 #"ssions"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"member*"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"atom?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 7 #"member*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 7 #"member*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 7 #"member*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; Example od member*"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"member*"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"chips"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 6 #"potato"
0 0 24 3 2 #")("
0 0 14 3 5 #"chips"
0 0 24 3 3 #" (("
0 0 14 3 4 #"with"
0 0 24 3 2 #") "
0 0 14 3 4 #"fish"
0 0 24 3 3 #") ("
0 0 14 3 5 #"chips"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #"; ==> #t"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 67
#"; The leftmost function finds the leftmost atom in a non-empty list"
0 0 24 29 1 #"\n"
0 0 17 3 54 #"; of S-expressions that doesn't contain the empty list"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"leftmost"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"atom?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #"))("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 8 #"leftmost"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; Examples of leftmost"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"leftmost"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 6 #"potato"
0 0 24 3 2 #")("
0 0 14 3 5 #"chips"
0 0 24 3 2 #"(("
0 0 14 3 4 #"with"
0 0 24 3 1 #")"
0 0 14 3 4 #"fish"
0 0 24 3 2 #")("
0 0 14 3 5 #"chips"
0 0 24 3 8 #"))))    "
0 0 17 3 12 #";    'potato"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"leftmost"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"((("
0 0 14 3 3 #"hot"
0 0 24 3 2 #")("
0 0 14 3 4 #"tuna"
0 0 24 3 1 #"("
0 0 14 3 3 #"and"
0 0 24 3 3 #")))"
0 0 14 3 6 #"cheese"
0 0 24 3 16 #"))              "
0 0 17 3 9 #";    'hot"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #"; Examples of not-applicable leftmost"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #"; (leftmost '(((()four))17(seventeen)))             ;    leftmost s-"
 #"expression is empty"
) 0 0 24 29 1 #"\n"
0 0 17 3 11 #"; (leftmost"
0 0 17 3 56 #" '())                                    ;    empty list"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #"; Or expressed via cond"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; (or a b) = (cond (a #t)(else b))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; And expressed via cond"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 35 #"; (and a b) = (cond (a b)(else #f))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 56 #"; The eqlist? function determines if two lists are equal"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"eqlist?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"l1"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 46 #"; case 1: l1 is empty, l2 is empty, atom, list"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #")("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 2 #"))"
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #")("
0 0 14 3 5 #"atom?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 3 #")))"
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 1 #")"
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 44 #";case 2: l1 is atom, l2 is empty, atom, list"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"atom?"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 3 #"))("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 2 #"))"
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"atom?"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 3 #"))("
0 0 14 3 5 #"atom?"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #")("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 7 #"eqlist?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #")("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"atom?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #"))"
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 47 #"; case 3: l1 is a list, l2 is empty, atom, list"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 1 #")"
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"atom?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 2 #"))"
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 3 1 #"("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 7 #"eqlist?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #")("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 7 #"eqlist?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #")("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; Examples of eqlist?"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"eqlist?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 10 #"strawberry"
0 0 24 3 1 #" "
0 0 14 3 3 #"ice"
0 0 24 3 1 #" "
0 0 14 3 5 #"cream"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 10 #"strawberry"
0 0 24 3 1 #" "
0 0 14 3 3 #"ice"
0 0 24 3 1 #" "
0 0 14 3 5 #"cream"
0 0 24 3 10 #"))        "
0 0 17 3 4 #"; #t"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"eqlist?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 10 #"strawberry"
0 0 24 3 1 #" "
0 0 14 3 3 #"ice"
0 0 24 3 1 #" "
0 0 14 3 5 #"cream"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 10 #"strawberry"
0 0 24 3 1 #" "
0 0 14 3 5 #"cream"
0 0 24 3 1 #" "
0 0 14 3 3 #"ice"
0 0 24 3 10 #"))        "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"eqlist?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 5 #"banan"
0 0 24 3 3 #" (("
0 0 14 3 5 #"split"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 6 #"banana"
0 0 24 3 2 #") "
0 0 14 3 5 #"split"
0 0 24 3 16 #"))              "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"eqlist?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"beef"
0 0 24 3 3 #" (("
0 0 14 3 7 #"sausage"
0 0 24 3 3 #"))("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 4 #"soda"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"beef"
0 0 24 3 3 #" (("
0 0 14 3 6 #"salami"
0 0 24 3 3 #"))("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 4 #"soda"
0 0 24 3 6 #"))))  "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"eqlist?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"beef"
0 0 24 3 2 #"(("
0 0 14 3 7 #"sausage"
0 0 24 3 3 #"))("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 4 #"soda"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"beef"
0 0 24 3 2 #"(("
0 0 14 3 7 #"sausage"
0 0 24 3 3 #"))("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 4 #"soda"
0 0 24 3 6 #"))))  "
0 0 17 3 4 #"; #t"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; eqlist? rewritten"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"eqlist2?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"l1"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 45 #"; case 1: l1 isempty, l2 is empty, atom, list"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #")("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 2 #"))"
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #")("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 2 #"))"
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 45 #"; case 2: l1 is atom, l2 is empty, atom, list"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"atom?"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 3 #"))("
0 0 14 3 5 #"atom?"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #")("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"eqlist2?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #")("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"atom?"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 3 #"))("
0 0 14 3 5 #"atom?"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 3 #")))"
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 47 #"; case 3: l1 is a list, l2 is empty, atom, list"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"eqlist2?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #")("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 8 #"eqlist2?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #")("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; Examples of eqlist2?"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"eqlist2?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 10 #"strawberry"
0 0 24 3 1 #" "
0 0 14 3 3 #"ice"
0 0 24 3 1 #" "
0 0 14 3 5 #"cream"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 10 #"strawberry"
0 0 24 3 1 #" "
0 0 14 3 3 #"ice"
0 0 24 3 1 #" "
0 0 14 3 5 #"cream"
0 0 24 3 14 #"))            "
0 0 17 3 4 #"; #t"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"eqlist2?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 10 #"strawberry"
0 0 24 3 1 #" "
0 0 14 3 3 #"ice"
0 0 24 3 1 #" "
0 0 14 3 5 #"cream"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 10 #"strawberry"
0 0 24 3 1 #" "
0 0 14 3 5 #"cream"
0 0 24 3 1 #" "
0 0 14 3 3 #"ice"
0 0 24 3 14 #"))            "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"eqlist2?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 5 #"banan"
0 0 24 3 3 #" (("
0 0 14 3 5 #"split"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 6 #"banana"
0 0 24 3 2 #") "
0 0 14 3 5 #"split"
0 0 24 3 20 #"))                  "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"eqlist2?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"beef"
0 0 24 3 3 #" (("
0 0 14 3 7 #"sausage"
0 0 24 3 3 #"))("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 4 #"soda"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"beef"
0 0 24 3 3 #" (("
0 0 14 3 6 #"salami"
0 0 24 3 3 #"))("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 4 #"soda"
0 0 24 3 10 #"))))      "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"eqlist2?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"beef"
0 0 24 3 2 #"(("
0 0 14 3 7 #"sausage"
0 0 24 3 3 #"))("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 4 #"soda"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"beef"
0 0 24 3 2 #"(("
0 0 14 3 7 #"sausage"
0 0 24 3 3 #"))("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 4 #"soda"
0 0 24 3 10 #"))))      "
0 0 17 3 4 #"; #t"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#"; The equal? function determines if two S-expressions are equal"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"equal??"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 2 #"s1"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 5 #"atom?"
0 0 24 3 1 #" "
0 0 14 3 2 #"s1"
0 0 24 3 2 #")("
0 0 14 3 5 #"atom?"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"s1"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"atom?"
0 0 24 3 1 #" "
0 0 14 3 2 #"s1"
0 0 24 3 1 #")"
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"atom?"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 1 #")"
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 7 #"eqlist?"
0 0 24 3 1 #" "
0 0 14 3 2 #"s1"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; Examples of equal??"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"equal??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 21 #")                    "
0 0 17 3 4 #"; #t"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"equal??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 21 #")                    "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"equal??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 19 #")                  "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"equal??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 18 #"))                "
0 0 17 3 4 #"; #t"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"equal??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"b"
0 0 24 3 18 #"))                "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"equal??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 20 #"())                 "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"equal??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 19 #"))                 "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"equal??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 10 #"))        "
0 0 17 3 4 #"; #t"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"equal??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 1 #"("
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 1 #"("
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 9 #")))      "
0 0 17 3 4 #"; #t"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"equal??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 5 #" ()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 15 #" ()))          "
0 0 17 3 4 #"; #t"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; equal? simplified"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"equal2??"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"s1"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"atom?"
0 0 24 3 1 #" "
0 0 14 3 2 #"s1"
0 0 24 3 2 #")("
0 0 14 3 5 #"atom?"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"s1"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"atom?"
0 0 24 3 1 #" "
0 0 14 3 2 #"s1"
0 0 24 3 2 #")("
0 0 14 3 5 #"atom?"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 2 #"))"
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 7 #"eqlist?"
0 0 24 3 1 #" "
0 0 14 3 2 #"s1"
0 0 24 3 1 #" "
0 0 14 3 2 #"s2"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; Examples of equal2??"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"equal2??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 21 #")                    "
0 0 17 3 4 #"; #t"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"equal2??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"b"
0 0 24 3 21 #")                    "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"equal2??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 19 #")                  "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"equal2??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 18 #"))                "
0 0 17 3 4 #"; #t"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"equal2??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"b"
0 0 24 3 18 #"))                "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"equal2??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 20 #"())                 "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"equal2??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 19 #"))                 "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"equal2??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 10 #"))        "
0 0 17 3 4 #"; #t"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"equal2??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 1 #"("
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 1 #"("
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 9 #")))      "
0 0 17 3 4 #"; #t"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"equal2??"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 5 #" ()) "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 1 #"a"
0 0 24 3 15 #" ()))          "
0 0 17 3 4 #"; #t"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; eqlist?"
0 0 17 3 1 #" "
0 0 17 3 9 #"rewritten"
0 0 17 3 1 #" "
0 0 17 3 14 #"using equal2??"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"eqlist3?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"l1"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #")("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 2 #"))"
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #")("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 2 #"))"
0 0 21 3 2 #"#f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"equal2??"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #")("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"equal2??"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #")("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"l2"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; Examples of eqlist3?"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"eqlist3?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 10 #"strawberry"
0 0 24 3 1 #" "
0 0 14 3 3 #"ice"
0 0 24 3 1 #" "
0 0 14 3 5 #"cream"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 10 #"strawberry"
0 0 24 3 1 #" "
0 0 14 3 3 #"ice"
0 0 24 3 1 #" "
0 0 14 3 5 #"cream"
0 0 24 3 14 #"))            "
0 0 17 3 4 #"; #t"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"eqlist3?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 10 #"strawberry"
0 0 24 3 1 #" "
0 0 14 3 3 #"ice"
0 0 24 3 1 #" "
0 0 14 3 5 #"cream"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 10 #"strawberry"
0 0 24 3 1 #" "
0 0 14 3 5 #"cream"
0 0 24 3 1 #" "
0 0 14 3 3 #"ice"
0 0 24 3 14 #"))            "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"eqlist3?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 5 #"banan"
0 0 24 3 3 #" (("
0 0 14 3 5 #"split"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 6 #"banana"
0 0 24 3 2 #") "
0 0 14 3 5 #"split"
0 0 24 3 20 #"))                  "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"eqlist3?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"beef"
0 0 24 3 3 #" (("
0 0 14 3 7 #"sausage"
0 0 24 3 3 #"))("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 4 #"soda"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"beef"
0 0 24 3 3 #" (("
0 0 14 3 6 #"salami"
0 0 24 3 3 #"))("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 4 #"soda"
0 0 24 3 10 #"))))      "
0 0 17 3 4 #"; #f"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"eqlist3?"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"beef"
0 0 24 3 2 #"(("
0 0 14 3 7 #"sausage"
0 0 24 3 3 #"))("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 4 #"soda"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 4 #"beef"
0 0 24 3 2 #"(("
0 0 14 3 7 #"sausage"
0 0 24 3 3 #"))("
0 0 14 3 3 #"and"
0 0 24 3 1 #"("
0 0 14 3 4 #"soda"
0 0 24 3 10 #"))))      "
0 0 17 3 4 #"; #t"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";                                                                   "
 #"          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #"; The sixth commandment                                             "
 #"          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";                                                                   "
 #"          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #"; Simplify only after the function is correct.                      "
 #"          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";                                                                   "
 #"          ;"
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #"; rember function simplified, it now also works on S-expressions, no"
 #"t just atoms"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"rember"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (("
0 0 14 3 8 #"equal2??"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 14 3 1 #"s"
0 0 24 3 2 #")("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #")("
0 0 14 3 6 #"rember"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; Example of rember"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 6 #"rember"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"foo"
0 0 24 3 1 #"("
0 0 14 3 3 #"bar"
0 0 24 3 1 #"("
0 0 14 3 3 #"baz"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 6 #"apples"
0 0 24 3 1 #"("
0 0 14 3 3 #"foo"
0 0 24 3 1 #"("
0 0 14 3 3 #"bar"
0 0 24 3 1 #"("
0 0 14 3 3 #"baz"
0 0 24 3 3 #")))"
0 0 14 3 7 #"oranges"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #"; ==> (apples oranges)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
