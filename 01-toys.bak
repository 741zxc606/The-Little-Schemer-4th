; Chapter 1

; Examples of atom
;
'atom
(quote atom)
'turkey
1492
'u
'*abc$
(quote *abc$)

; Examples of lists and s-expressions
;
'(atom)
(quote(atom))
'(atom turkey or)
'((atom turkey)or)
'xyz
'(x y z)
'((x y) z)
'(how are you doing so far)
'(((how)are)((you)(doing so))far)
0
'()
'(()()())

;Examples of not-lists
;
'(atom turkey)'or    ; it's two seprate s-expressions

;Examples of not-atoms
;
'()    ; it's a list

;Examples of car
;
(car'(a b c))    ;'a
(car '((a b c)x y z))    ;'(a b c)

;Examples of not-applicable car
;
;(car 'hotdog)    ; not-applicable because 'hostdog is not a list
;(car '())    ; not-applicable because '() is an empty list

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; The law of car:                                             ;
;                                                             ;
; The primitive /car/ is defined only for non-empty lists.    ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; More examples of car
;
(car '(((hotdogs))(and)(pickle) relish)) ; '((hotdogs))
(car (car '(((hotdogs))(and))))          ; '(hotdogs)

; Examples of cdr
;
(cdr '(a b c))            ; '(b c)
(cdr '((a b c) x y z))    ; '(x y z)
(cdr '(hambuger))         ; '()
(cdr '((x) t r))          ; '(t r)

;Examples of not-applicable cdr
;
;(cdr 'hotdogs)           ; not-applicable because 'hostdogs is not a list
;(cdr '())                ; not-applicable because '() is an empty list

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; The law of cdr:                                             ;
;                                                             ;
; The primitive /cdr/ is defined only for non-empty lists.    ;
; The /cdr/ of any non-empty list is always another list.     ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Examples of car and cdr
;
(car (cdr '((b)(x y)((c)))))        ; '(x y)
(cdr (cdr '((b)(x y)((c)))))        ; '(((c)))

; Examples of cons
;
(cons 'peanut '(butter and jelly))        ; '(peanut butter and jelly)
(cons '(banana and) '(peanut butter and jelly))    ; '((banana and) peanut butter and jelly)
(cons '((help) this) '(is very ((hard) to learn)))  ; '(((help) this) is very ((hard) to learn))
(cons '(a b (c)) '())    ; '((a b (c)))
(cons 'a '())    ; '(a)

;Examples of non-applicable cons
;
; (cons '((a b c)) 'b) ; not-applicable because 'b is not a list
; (cons 'a 'b)         ; not-applicable because 'b is not a list

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; The law of cons:                                            ;
;                                                             ;
; The primitive /cons/ takes two arguments.                   ;
; The second argument to /cons/ must be a list.               ;
; The result is a list.                                       ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Examples of cons, car and cdr
;
(cons 'a (car '((b) c d)))    ; (a b)
(cons 'a (cdr '((b) c d)))    ; (a c d)

; Example of the non-list
;
'()

; Examples of null?
;
(null? '())        ; true
(null? '(a b c))   ; false

; Example of non-applicable null?
;
(null? 'scheme)    ; not-applicable because 'scheme is not a list

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; The law of null:                                            ;
;                                                             ;
; The primitive /null/ is defined only for lists.             ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; We first need to define atom? for Scheme as it's not a primitive
;
(define atom?
  (lambda (x)
    (and (not (pair? x))(not(null? x)))))    ; pair or 'pair?

; Examples of atom?
;
(atom? 'Harry)        ; true
(atom? '(Harry had a heap of apples))    ; false

; Examples of atom?, car and cdr
;
(atom? (car '(Harry had a heap of apples)))    ; true
(atom? (cdr '(Harry had a heap of apples)))    ; false
(atom? (cdr '(Harry)))    ;false
(atom? (car (cdr '(swing low sweet cherry oat))))    ; true
(atom? (car (cdr'(swing(low sweet) cherry oat))))    ; false

; Examples of eq?
;
(eq? 'Harry 'Harry)        ; true
(eq? 'margarine 'butter)   ; false

; Examples of not-applicable eq?
;
; (eq? '() '(strawberry))        ; not-applicable because eq? works only on atoms
; (eq? 5 6)                      ; not-applicable because eq? works only on non-numeric atoms

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; The law of eq?                                              ;
;                                                             ;
; The primitive /eq?/ takes two arguments.                    ;
; Each must be a non-numeric atom.                            ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Examples of eq?, car and cdr
;
(eq? (car '(Mary had a little lamb chop)) 'Mary)        ; true
(eq? (car '(beans beans)) (car (cdr '(beans beans))))   ; true

; Examples of not-applicable eq?, car and cdr
;
; (eq? (cdr '(sound milk)) 'milk)                       ; not-applicable because (cdr '(...)) is a list



